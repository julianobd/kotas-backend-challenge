// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokemonKotas.Data.Context;

#nullable disable

namespace PokemonKotas.Data.Migrations
{
    [DbContext(typeof(MasterPokemonDbContext))]
    [Migration("20240908000056_AddingLegendaryMythicalToCapturedPokemon")]
    partial class AddingLegendaryMythicalToCapturedPokemon
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("PokemonKotas.Data.Models.CapturedPokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CapturedDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsLegendary")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsMythical")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MasterPokemonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PokemonName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MasterPokemonId");

                    b.ToTable("CapturedPokemons");
                });

            modelBuilder.Entity("PokemonKotas.Data.Models.MasterPokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RegisterDateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MasterPokemons");
                });

            modelBuilder.Entity("PokemonKotas.Data.Models.PokemonAbility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CapturedPokemonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CapturedPokemonId");

                    b.ToTable("PokemonAbilities");
                });

            modelBuilder.Entity("PokemonKotas.Data.Models.PokemonEvolution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CapturedPokemonId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsLegendary")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsMythical")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<int?>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CapturedPokemonId");

                    b.ToTable("PokemoEvolutions");
                });

            modelBuilder.Entity("PokemonKotas.Data.Models.PokemonSprite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CapturedPokemonId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PokemonEvolutionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SpriteBase64")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CapturedPokemonId");

                    b.HasIndex("PokemonEvolutionId");

                    b.ToTable("PokemonSprite");
                });

            modelBuilder.Entity("PokemonKotas.Data.Models.CapturedPokemon", b =>
                {
                    b.HasOne("PokemonKotas.Data.Models.MasterPokemon", "MasterPokemon")
                        .WithMany("CapturedPokemons")
                        .HasForeignKey("MasterPokemonId");

                    b.Navigation("MasterPokemon");
                });

            modelBuilder.Entity("PokemonKotas.Data.Models.PokemonAbility", b =>
                {
                    b.HasOne("PokemonKotas.Data.Models.CapturedPokemon", "CapturedPokemon")
                        .WithMany("Abilities")
                        .HasForeignKey("CapturedPokemonId");

                    b.Navigation("CapturedPokemon");
                });

            modelBuilder.Entity("PokemonKotas.Data.Models.PokemonEvolution", b =>
                {
                    b.HasOne("PokemonKotas.Data.Models.CapturedPokemon", "CapturedPokemon")
                        .WithMany("Evolutions")
                        .HasForeignKey("CapturedPokemonId");

                    b.Navigation("CapturedPokemon");
                });

            modelBuilder.Entity("PokemonKotas.Data.Models.PokemonSprite", b =>
                {
                    b.HasOne("PokemonKotas.Data.Models.CapturedPokemon", "CapturedPokemon")
                        .WithMany("Sprites")
                        .HasForeignKey("CapturedPokemonId");

                    b.HasOne("PokemonKotas.Data.Models.PokemonEvolution", "PokemonEvolution")
                        .WithMany("Sprites")
                        .HasForeignKey("PokemonEvolutionId");

                    b.Navigation("CapturedPokemon");

                    b.Navigation("PokemonEvolution");
                });

            modelBuilder.Entity("PokemonKotas.Data.Models.CapturedPokemon", b =>
                {
                    b.Navigation("Abilities");

                    b.Navigation("Evolutions");

                    b.Navigation("Sprites");
                });

            modelBuilder.Entity("PokemonKotas.Data.Models.MasterPokemon", b =>
                {
                    b.Navigation("CapturedPokemons");
                });

            modelBuilder.Entity("PokemonKotas.Data.Models.PokemonEvolution", b =>
                {
                    b.Navigation("Sprites");
                });
#pragma warning restore 612, 618
        }
    }
}
